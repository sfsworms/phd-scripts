NNK3_correct %>%
filter(enrichment_ratio < 1) %>%
select(enrichment_ratio) %>%
summary
number_peptide_repressed <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "repressed") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
number_peptide_induced <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "induced") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
nanodrop <- read.csv(file.choose())
library(ggplot2)
p <- ggplot(nanodrop, aes(x = old_conc, y = new_conc)) +
geom_point() +  # add the dots
geom_smooth(method = "lm", se = FALSE, color = "red") +  # add the linear regression line
geom_text(x = max(df$x), y = max(df$y),  # add the R^2 value
label = paste("R^2 =", round(summary(lm(y ~ x, data = df))$r.squared, 2)))
p <- ggplot(nanodrop, aes(x = old_conc, y = new_conc)) +
geom_point() +  # add the dots
geom_smooth(method = "lm", se = FALSE, color = "red") +  # add the linear regression line
geom_text(x = max(nanodrop$old_conc), y = max(nanodrop$new_conc),  # add the R^2 value
label = paste("R^2 =", round(summary(lm(y ~ x, data = df))$r.squared, 2)))
p <- ggplot(nanodrop, aes(x = nanodrop$old_conc, y = nanodrop$new_conc)) +
geom_point() +  # add the dots
geom_smooth(method = "lm", se = FALSE, color = "red") +  # add the linear regression line
geom_text(x = max(nanodrop$old_conc), y = max(nanodrop$new_conc),  # add the R^2 value
label = paste("R^2 =", round(summary(lm(y ~ x, data = df))$r.squared, 2)))
p <- ggplot(nanodrop, aes(x = nanodrop$old_conc, y = nanodrop$new_conc)) +
geom_point() +  # add the dots
geom_smooth(method = "lm", se = FALSE, color = "red") +  # add the linear regression line
geom_text(x = max(nanodrop$old_conc), y = max(nanodrop$new_conc),  # add the R^2 value
label = paste("R^2 =", round(summary(lm(y ~ x, data = nanodrof))$r.squared, 2)))
p <- ggplot(nanodrop, aes(x = nanodrop$old_conc, y = nanodrop$new_conc)) +
geom_point() +  # add the dots
geom_smooth(method = "lm", se = FALSE, color = "red") +  # add the linear regression line
geom_text(x = max(nanodrop$old_conc), y = max(nanodrop$new_conc),  # add the R^2 value
label = paste("R^2 =", round(summary(lm(y ~ x, data = nanodrof))$r.squared, 2)))
p <- ggplot(nanodrop, aes(x = nanodrop$old_conc, y = nanodrop$new_conc)) +
geom_point() +  # add the dots
geom_smooth(method = "lm", se = FALSE, color = "red")
p
p <- ggplot(nanodrop, aes(x = nanodrop$old_conc, y = nanodrop$new_conc)) +
geom_point() +  # add the dots
geom_smooth(method = "lm", se = FALSE, color = "red") +  # add the linear regression line
geom_text(x = max(nanodrop$old_conc), y = max(nanodrop$new_conc),  # add the R^2 value
label = "prout")
p
p <- ggplot(nanodrop, aes(x = nanodrop$old_conc, y = nanodrop$new_conc)) +
geom_point() +  # add the dots
geom_smooth(method = "lm", se = FALSE, color = "red") +  # add the linear regression line
geom_text(x = min(nanodrop$old_conc), y = max(nanodrop$new_conc),  # add the R^2 value
label = "prout") +
xlab("DNA concentration according to the Nanodrop, 11/04/2022") +
ylab("DNA concentration according to the Nanodrop, 07/03/2023")
p
p <- ggplot(nanodrop, aes(x = nanodrop$old_conc, y = nanodrop$new_conc)) +
geom_point() +  # add the dots
geom_smooth(method = "lm", se = FALSE, color = "red") +  # add the linear regression line
geom_text(x = min(nanodrop$old_conc), y = max(nanodrop$new_conc),  # add the R^2 value
label = paste("R^2 =", round(summary(lm(new_conc ~ old_conc, data = nanodrop))$r.squared, 2))) +
xlab("DNA concentration according to the Nanodrop, 11/04/2022") +
ylab("DNA concentration according to the Nanodrop, 07/03/2023")
p
?geom_test
?geom_text
p <- ggplot(nanodrop, aes(x = nanodrop$old_conc, y = nanodrop$new_conc)) +
geom_point() +  # add the dots
geom_smooth(method = "lm", se = FALSE, color = "red") +  # add the linear regression line
geom_text(position = 'top'),  # add the R^2 value
p <- ggplot(nanodrop, aes(x = nanodrop$old_conc, y = nanodrop$new_conc)) +
geom_point() +  # add the dots
geom_smooth(method = "lm", se = FALSE, color = "red") +  # add the linear regression line
geom_text(x = min(nanodrop$old_conc+20), y = max(nanodrop$new_conc),  # add the R^2 value
label = paste("R^2 =", round(summary(lm(new_conc ~ old_conc, data = nanodrop))$r.squared, 2))) +
xlab("DNA concentration according to the Nanodrop, 11/04/2022") +
ylab("DNA concentration according to the Nanodrop, 07/03/2023")
p
p <- ggplot(nanodrop, aes(x = nanodrop$old_conc, y = nanodrop$new_conc)) +
geom_point() +  # add the dots
geom_smooth(method = "lm", se = FALSE, color = "red") +  # add the linear regression line
geom_text(x = min(nanodrop$old_conc+20), y = max(nanodrop$new_conc),  # add the R^2 value
label = paste("R^2 =", round(summary(lm(new_conc ~ old_conc, data = nanodrop))$r.squared, 2))) +
xlab("DNA concentration according to the Nanodrop, 11/04/2022 (ng/µL)") +
ylab("DNA concentration according to the Nanodrop, 07/03/2023 (ng/µL)")
p
#Work with a limited number of reads to get something I can work with easily.
n_reads <- 1*10^5
setwd(dir = "C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline")
knitr::opts_chunk$set(echo = FALSE, comment = '', fig.width = 6, fig.height = 6)
library(tidyverse)
library(ggplot2)
#Load some custom functions
source("C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline/function.R")
#Work with a limited number of reads to get something I can work with easily.
n_reads <- 1*10^5
directory <- "C:/Users/worms/NGS Data/2022.06.07_drift_seq/90-666155004b/00_fastq/NNK"
NNK7<- read.csv2(file = paste(directory,
"NNK7",
"count_set_NNK7.csv", sep = "/"),
nrow = n_reads)
NNK3<- read.csv2(file = paste(directory,
"NNK3",
"count_set_NNK3.csv", sep = "/"),
nrow = n_reads)
tapply(count_set_NNK3$enrichment_ratio, count_set_NNK3$condition, summary)
NNK3 %>% head()
NNK3_correct <- NNK3%>%
filter(grepl("^TGC.*", seq))
NNK3_stops_correct <- NNK3_correct %>%
filter(grepl("\\*", peptide_seq))
NNK3_stops <- NNK3 %>%
filter(grepl("\\*", peptide_seq))
NNK3_correct <- NNK3%>%
filter(grepl("^TGC.*", seq))
NNK3_stops_correct <- NNK3_correct %>%
filter(grepl("\\*", peptide_seq))
tapply(NNK3$enrichment_ratio, count_set_NNK3$condition, summary)
tapply(NNK3$enrichment_ratio, NNK3$condition, summary)
setwd(dir = "C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline")
knitr::opts_chunk$set(echo = FALSE, comment = '', fig.width = 6, fig.height = 6)
library(tidyverse)
library(ggplot2)
#Load some custom functions
source("C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline/function.R")
#Work with a limited number of reads to get something I can work with easily.
n_reads <- 1*10^5
directory <- "C:/Users/worms/NGS Data/2022.06.07_drift_seq/90-666155004b/00_fastq/NNK"
NNK7<- read.csv2(file = paste(directory,
"NNK7",
"count_set_NNK7.csv", sep = "/"),
nrow = n_reads)
NNK3<- read.csv2(file = paste(directory,
"NNK3",
"count_set_NNK3.csv", sep = "/"),
nrow = n_reads)
tapply(NNK3$enrichment_ratio, NNK3$condition, summary)
na_percent_induced <- NNK3%>%
filter(condition == "induced") %>%
select(enrichment_ratio) %>%
is.na() %>%
mean() %>%
round(digits = 2)
na_percent_repressed <- NNK3%>%
filter(condition == "repressed") %>%
select(enrichment_ratio) %>%
is.na() %>%
mean() %>%
round(digits = 2)
NNK3_stops <- NNK3 %>%
filter(grepl("\\*", peptide_seq))
NNK3_correct <- NNK3%>%
filter(grepl("^TGC.*", seq))
NNK3_stops_correct <- NNK3_correct %>%
filter(grepl("\\*", peptide_seq))
NNK3_correct <- NNK3%>%
filter(grepl("^TGC.*", seq))
NNK3_stops_correct <- NNK3_correct %>%
filter(grepl("\\*", peptide_seq))
rm(NNK3_stops_correct, NNK3_stops)
NNK3_na <- NNK3[NNK3%>% is.na() %>% rowSums() != 0,]
tapply(NNK3_na$gen5_sum, NNK3_na$condition, summary)
tapply(NNK3$gen5_sum, NNK3$condition, summary)
NNK3_na_correct_nombre <- NNK3_na %>%
filter(grepl("^TGC.*", seq)) %>%
nrow()
NNK3_correct_no_na <- na.omit(NNK3_correct)
NNK3_correct %>%
filter(enrichment_ratio < 1) %>%
select(enrichment_ratio) %>%
summary
number_peptide_repressed <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "repressed") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
number_peptide_induced <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "induced") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
number_peptide_repressed <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "repressed") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
number_peptide_induced <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "induced") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
number_peptide_induced_no_na <- NNK3_correct %>%
na.omit() %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "induced") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
number_peptide_repressed_no_na <- NNK3_correct %>%
na.omit() %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "repressed") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
NNK3_correct$gen5_sum %>% min()
NNK3_correct$gen5_r1 %>% min()
NNK3_correct$gen5_r2 %>% min()
NNK3_correct %>% filter(gen5_sum < 5)
NNK3_correct %>% filter(gen5_sum < 4)
induced_set_peptide_sequence <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "induced") %>%
select(peptide_seq) %>%
unique()
setwd(dir = "C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline")
knitr::opts_chunk$set(echo = FALSE, comment = '', fig.width = 6, fig.height = 6)
library(tidyverse)
library(ggplot2)
#Load some custom functions
source("C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline/function.R")
#Work with a limited number of reads to get something I can work with easily.
n_reads <- 1*10^8
directory <- "C:/Users/worms/NGS Data/2022.06.07_drift_seq/90-666155004b/00_fastq/NNK"
# NNK7<- read.csv2(file = paste(directory,
#                                         "NNK7",
#                                         "count_set_NNK7.csv", sep = "/"),
#                         nrow = n_reads)
NNK3<- read.csv2(file = paste(directory,
"NNK3",
"count_set_NNK3.csv", sep = "/"),
nrow = n_reads)
tapply(NNK3$enrichment_ratio, NNK3$condition, summary)
na_percent_induced <- NNK3%>%
filter(condition == "induced") %>%
select(enrichment_ratio) %>%
is.na() %>%
mean() %>%
round(digits = 2)
na_percent_repressed <- NNK3%>%
filter(condition == "repressed") %>%
select(enrichment_ratio) %>%
is.na() %>%
mean() %>%
round(digits = 2)
NNK3_stops <- NNK3 %>%
filter(grepl("\\*", peptide_seq))
NNK3_correct <- NNK3%>%
filter(grepl("^TGC.*", seq))
NNK3_stops_correct <- NNK3_correct %>%
filter(grepl("\\*", peptide_seq))
rm(NNK3_stops_correct, NNK3_stops)
NNK3_na <- NNK3[NNK3%>% is.na() %>% rowSums() != 0,]
tapply(NNK3_na$gen5_sum, NNK3_na$condition, summary)
tapply(NNK3$gen5_sum, NNK3$condition, summary)
NNK3_na <- NNK3[NNK3%>% is.na() %>% rowSums() != 0,]
tapply(NNK3_na$gen5_sum, NNK3_na$condition, summary)
tapply(NNK3$gen5_sum, NNK3$condition, summary)
NNK3_na_correct_nombre <- NNK3_na %>%
filter(grepl("^TGC.*", seq)) %>%
nrow()
NNK3_correct_no_na <- na.omit(NNK3_correct)
NNK3_correct %>%
filter(enrichment_ratio < 1) %>%
select(enrichment_ratio) %>%
summary
number_peptide_repressed <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "repressed") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
number_peptide_induced <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "induced") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
number_peptide_induced_no_na <- NNK3_correct %>%
na.omit() %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "induced") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
number_peptide_repressed_no_na <- NNK3_correct %>%
na.omit() %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "repressed") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
induced_set_peptide_sequence <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "induced") %>%
select(peptide_seq) %>%
unique()
repressed_set_peptide_seq
induced_set_peptide_sequence <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "repressed") %>%
select(peptide_seq) %>%
unique()
induced_set_peptide_sequence <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "induced") %>%
select(peptide_seq) %>%
unique()
repressed_set_peptide_sequence <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "repressed") %>%
select(peptide_seq) %>%
unique()
induced_set_peptide_sequence %in% repressed_set_peptide_sequence
induced_set_peptide_sequence
induced_set_peptide_sequence %>% head()
induced_set_peptide_sequence$peptide_seq %>% in repressed_set_peptide_sequence$peptide_seq
induced_set_peptide_sequence$peptide_seq %in% repressed_set_peptide_sequence$peptide_seq
repressed_set_peptide_sequence %>% filter( !(repressed_set_peptide_sequence$peptide_seq %in% induced_set_peptide_sequence$peptide_seq))
absent_peptides <- repressed_set_peptide_sequence %>% filter( !(repressed_set_peptide_sequence$peptide_seq %in% induced_set_peptide_sequence$peptide_seq))
absent_peptides
NNK3_absent_peptides <- NNK3 %>%
filter(absent_peptides$peptide_seq %in% NNK3$peptide_seq)
NNK3_absent_peptides <- NNK3 %>%
filter(NNK3$peptide_seq %>% absent_peptides$peptide_seq)
NNK3_absent_peptides <- NNK3 %>%
filter(NNK3$peptide_seq %in% absent_peptides$peptide_seq)
NNK3_absent_peptides
source("C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline/Reports/2023.03.01 Analysis for Patrice.Rmd")
---
title: "Analysis of cyclic peptides"
setwd(dir = "C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline")
knitr::opts_chunk$set(echo = FALSE, comment = '', fig.width = 6, fig.height = 6)
library(tidyverse)
library(ggplot2)
#Load some custom functions
source("C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline/function.R")
#Work with a limited number of reads to get something I can work with easily.
n_reads <- 1*10^8
directory <- "C:/Users/worms/NGS Data/2022.06.07_drift_seq/90-666155004b/00_fastq/NNK"
# NNK7<- read.csv2(file = paste(directory,
#                                         "NNK7",
#                                         "count_set_NNK7.csv", sep = "/"),
#                         nrow = n_reads)
NNK3 <- read.csv2(file = paste(directory,
"NNK3",
"count_set_NNK3.csv", sep = "/"),
nrow = n_reads)
tapply(NNK3$enrichment_ratio, NNK3$condition, summary)
na_percent_induced <- NNK3%>%
filter(condition == "induced") %>%
select(enrichment_ratio) %>%
is.na() %>%
mean() %>%
round(digits = 2)
na_percent_repressed <- NNK3%>%
filter(condition == "repressed") %>%
select(enrichment_ratio) %>%
is.na() %>%
mean() %>%
round(digits = 2)
NNK3_stops <- NNK3 %>%
filter(grepl("\\*", peptide_seq))
NNK3_correct <- NNK3%>%
filter(grepl("^TGC.*", seq))
NNK3_stops_correct <- NNK3_correct %>%
filter(grepl("\\*", peptide_seq))
rm(NNK3_stops_correct, NNK3_stops)
NNK3_na <- NNK3[NNK3%>% is.na() %>% rowSums() != 0,]
tapply(NNK3_na$gen5_sum, NNK3_na$condition, summary)
tapply(NNK3$gen5_sum, NNK3$condition, summary)
NNK3_na_correct_nombre <- NNK3_na %>%
filter(grepl("^TGC.*", seq)) %>%
nrow()
NNK3_correct_no_na <- na.omit(NNK3_correct)
NNK3_correct %>%
filter(enrichment_ratio < 1) %>%
select(enrichment_ratio) %>%
summary
number_peptide_repressed <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "repressed") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
number_peptide_induced <- NNK3_correct %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "induced") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
number_peptide_induced_no_na <- NNK3_correct %>%
na.omit() %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "induced") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
number_peptide_repressed_no_na <- NNK3_correct %>%
na.omit() %>%
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "repressed") %>%
select(peptide_seq) %>%
unique() %>%
nrow()
induced_set_peptide_sequence <- NNK3_correct %>% #Extract all the peptide sequence in the induced set
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "induced") %>%
select(peptide_seq) %>%
unique()
repressed_set_peptide_sequence <- NNK3_correct %>% #Extract all the peptide sequence in the repressed set
filter(!grepl("\\*", peptide_seq)) %>%
filter(condition == "repressed") %>%
select(peptide_seq) %>%
unique()
absent_peptides <- repressed_set_peptide_sequence %>% filter( !(repressed_set_peptide_sequence$peptide_seq %in% induced_set_peptide_sequence$peptide_seq))
absent_peptides
NNK3_absent_peptides <- NNK3 %>%
filter(NNK3$peptide_seq %in% absent_peptides$peptide_seq)
cor_data <- aggregate(NNK3_correct_no_na$enrichment_ratio, by=list(peptide_seqs=repressed_set_peptide_sequence), FUN=cor)
?aggregate
cor_data <- aggregate(NNK3_correct_no_na$enrichment_ratio, by=list(repressed_set_peptide_sequence), FUN=cor)
cor_data <- aggregate(NNK3_correct_no_na$enrichment_ratio, by=repressed_set_peptide_sequence, FUN=cor)
NNK3_correct_no_na$enrichment_ratio %>% length()
cor_data <- aggregate(NNK3_correct_no_na$enrichment_ratio, NNK3_correct_no_na$peptide_seq, FUN=cor)
cor_data <- aggregate(NNK3_correct_no_na$enrichment_ratio, list(NNK3_correct_no_na$peptide_seq), FUN=cor)
cor_data <- aggregate(NNK3_correct_no_na$enrichment_ratio, list(NNK3_correct_no_na$peptide_seq), FUN= 'cor')
?cor
cor_data <- aggregate(NNK3_correct_no_na$enrichment_ratio, list(NNK3_correct_no_na$peptide_seq), FUN= 'mean')
cor_data
mean_enrichment_ratio_log_repressed <- aggregate(NNK3_correct_no_na %>%
filter(condition == "repressed") %>%
select(enrichment_ratio_log),
list(NNK3_correct_no_na$peptide_seq), FUN= 'mean')
mean_enrichment_ratio_log_repressed <- aggregate(NNK3_correct_no_na %>%
filter(condition == "repressed") %>%
select(enrichment_ratio_log) %>%
[[]],
NNK3_correct_no_na %>%
filter(condition == "repressed") %>%
select(enrichment_ratio_log)
NNK3_correct_no_na %>%
filter(condition == "repressed") %>%
select(enrichment_ratio_log) %>% lenght()
NNK3_correct_no_na %>%
filter(condition == "repressed") %>%
select(enrichment_ratio_log) %>% length()
NNK3_correct_no_na %>%
filter(condition == "repressed") %>%
select(enrichment_ratio_log) %>% .[[]] %>% length()
NNK3_correct_no_na %>%
filter(condition == "repressed") %>%
select(enrichment_ratio_log) %>% .[] %>% length()
mean_enrichment_ratio_log_repressed <-  NNK3_correct_no_na %>%
subset(condition == "repressed", select=c(peptide_seq, enrichment_ratio_log)) %>%
aggregate(enrichment_ratio_log ~ peptide_seq, data=., FUN=mean)
mean_enrichment_ratio_log_repressed
NNK3_correct_no_na_no_stops <- NNK3_correct_no_na %>%
filter(!grepl("\\*", peptide_seq))
mean_enrichment_ratio_log_repressed <-  NNK3_correct_no_na %>%
subset(condition == "repressed", select=c(peptide_seq, enrichment_ratio_log)) %>%
aggregate(enrichment_ratio_log ~ peptide_seq, data=., FUN=mean)
mean_enrichment_ratio_log_repressed
mean_enrichment_ratio_log_repressed <-  NNK3_correct_no_na_no_stops %>%
subset(condition == "repressed", select=c(peptide_seq, enrichment_ratio_log)) %>%
aggregate(enrichment_ratio_log ~ peptide_seq, data=., FUN=mean)
mean_enrichment_ratio_log_repressed %>% head()
mean_enrichment_ratio_log_induced <-  NNK3_correct_no_na_no_stops %>%
subset(condition == "induced", select=c(peptide_seq, enrichment_ratio_log)) %>%
aggregate(enrichment_ratio_log ~ peptide_seq, data=., FUN=mean)
cor(mean_enrichment_ratio_log_induced, mean_enrichment_ratio_log_repressed)
cor(mean_enrichment_ratio_log_induced$enrichment_ratio_log, mean_enrichment_ratio_log_repressed$enrichment_ratio_log)
mean_enrichment_ratio_log <- full_join(mean_enrichment_ratio_log_repressed, mean_enrichment_ratio_log_induced, by = peptide_set)
? full_join
mean_enrichment_ratio_log <- full_join(mean_enrichment_ratio_log_repressed, mean_enrichment_ratio_log_induced, by = "peptide_seq")
colnames(mean_enrichment_ratio_log) <- c("peptide_seq", "enrichment_ratio_repressed", "enrichment_ratio_induced")
ggplot(mean_enrichment_ratio_log, aes(x = enrichment_ratio_induced, y = enrichment_ratio_repressed)) +
geom_point()
p <- ggplot(mean_enrichment_ratio_log, aes(x = enrichment_ratio_induced, y = enrichment_ratio_repressed)) +
geom_point()
p
p <- ggplot(mean_enrichment_ratio_log, aes(x = enrichment_ratio_induced, y = enrichment_ratio_repressed)) +
geom_point() +
xlab("Log2(Enrichment Ratio) in the induced condition") +
ylab("Log2(Enrichment Ratio) in the repressed condition")
p
setwd(dir = "C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline")
knitr::opts_chunk$set(echo = FALSE, comment = '', fig.width = 6, fig.height = 6)
library(tidyverse)
library(ggplot2)
#Load some custom functions
source("C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline/function.R")
#Work with a limited number of reads to get something I can work with easily.
n_reads <- 1*10^8
setwd(dir = "C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline")
knitr::opts_chunk$set(echo = FALSE, comment = '', fig.width = 6, fig.height = 6)
library(tidyverse)
library(ggplot2)
#Load some custom functions
source("C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline/function.R")
#Work with a limited number of reads to get something I can work with easily.
n_reads <- 1*10^5
setwd("C:/Users/worms/Dropbox/PhD/PhD-Scripts/CyclicPeptidePipeline/Reports")
